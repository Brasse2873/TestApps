$ SAY = "write sys$output"
$ say "File attribute for file: ''P1'"
$ say "AI = ''f$file_attribute( P1,""AI"" )' " 
$ say "AI = ''f$file_attribute( P1,""AI"" )'.     TRUE if after-image (AI) journaling is enabled; FALSE if disabled."
$ say "ALQ = ''f$file_attribute( P1,""ALQ"" )'.     Allocation quantity."
$ say "BDT = ''f$file_attribute( P1,""BDT"" )'.     Backup date/time."
$ say "BI = ''f$file_attribute( P1,""BI"" )'.     TRUE if before-image (BI) journaling is enabled; FALSE if disabled."
$ say "BKS = ''f$file_attribute( P1,""BKS"" )'.     Bucket size."
$ say "BLS = ''f$file_attribute( P1,""BLS"" )'.     Block size."
$ say "CBT = ''f$file_attribute( P1,""CBT"" )'.     TRUE if contiguous-best-try; otherwise FALSE."
$ say "CDT = ''f$file_attribute( P1,""CDT"" )'.     Creation date/time."
$ say "CTG = ''f$file_attribute( P1,""CTG"" )'.     TRUE if contiguous; otherwise FALSE."
$ say "DEQ = ''f$file_attribute( P1,""DEQ"" )'.     Default extension quantity."
$ say "DID = ''f$file_attribute( P1,""DID"" )'.     Directory ID string."
$ say "DIRECTORY = ''f$file_attribute( P1,""DIRECTORY"" )'.     Returns TRUE or FALSE. Returns TRUE if it is a directory."
$ say "DVI = ''f$file_attribute( P1,""DVI"" )'.     Device name string."
$ say "EDT = ''f$file_attribute( P1,""EDT"" )'.     Expiration date/time."
$ say "EOF = ''f$file_attribute( P1,""EOF"" )'.     Number of blocks used."
$ say "ERASE = ''f$file_attribute( P1,""ERASE"" )'.     TRUE if a file's contents are erased before a file is deleted; otherwise FALSE."
$ say "FFB = ''f$file_attribute( P1,""FFB"" )'.     First free byte."
$ say "FID = ''f$file_attribute( P1,""FID"" )'.     File ID string."
$ say "FILE_LENGTH_HINT = ''f$file_attribute( P1,""FILE_LENGTH_HINT"" )'.     Record count and data byte count in the form ( n,m), where n is the record count and m is the data byte count. An invalidated count is specified by a -1 for n or m."
$ say "FSZ = ''f$file_attribute( P1,""FSZ"" )'.     Fixed control area size."
$ say "GBC = ''f$file_attribute( P1,""GBC"" )'.     Global buffer count."
$ say "GRP = ''f$file_attribute( P1,""GRP"" )'.     Owner group number."
$ say "JOURNAL_FILE = ''f$file_attribute( P1,""JOURNAL_FILE"" )'.     TRUE if the file is a journal; otherwise FALSE."
$ say "KNOWN = ''f$file_attribute( P1,""KNOWN"" )'.     Known file; returns TRUE or FALSE to indicate whether file is installed with the Install utility (INSTALL). However, returns NOSUCHFILE if a file does not exist (for example, the file has been installed but subsequently deleted)."
$ say "LOCKED = ''f$file_attribute( P1,""LOCKED"" )'.     TRUE if a file is deaccessed-locked; otherwise FALSE."
$ say "LRL = ''f$file_attribute( P1,""LRL"" )'.     Longest record length."
$ say "MBM = ''f$file_attribute( P1,""MBM"" )'.     Owner member number."
$ say "MOVE = ''f$file_attribute( P1,""MOVE"" )'.     TRUE if movefile operations are enabled; otherwise FALSE."
$ say "MRN = ''f$file_attribute( P1,""MRN"" )'.     Maximum record number."
$ say "MRS = ''f$file_attribute( P1,""MRS"" )'.     Maximum record size."
$ say "NOA = ''f$file_attribute( P1,""NOA"" )'.     Number of areas."
$ say "NOBACKUP = ''f$file_attribute( P1,""NOBACKUP"" )'.     FALSE if the file is marked for backup; TRUE if the file is marked NOBACKUP."
$ say "NOK = ''f$file_attribute( P1,""NOK"" )'.     Number of keys."
$ say "ORG = ''f$file_attribute( P1,""ORG"" )'.     File organization; returns SEQ, REL, IDX."
$ say "PRO = ''f$file_attribute( P1,""PRO"" )'.     File protection string."
$ say "PVN = ''f$file_attribute( P1,""PVN"" )'.     Prolog version number."
$ say "RAT = ''f$file_attribute( P1,""RAT"" )'.     Record attributes; returns CR, PRN, FTN, "."
$ say "RCK = ''f$file_attribute( P1,""RCK"" )'.     TRUE if read check; otherwise FALSE."
$ say "RDT = ''f$file_attribute( P1,""RDT"" )'.     Revision date/time."
$ say "RFM = ''f$file_attribute( P1,""RFM"" )'.     Record format string; returns the values VAR, FIX, VFC, UDF, STM, STMLF, STMCR."
$ say "RU = ''f$file_attribute( P1,""RU"" )'.     TRUE if recovery unit (RU) journaling is enabled; returns TRUE or FALSE."
$ say "RVN = ''f$file_attribute( P1,""RVN"" )'.     Revision number."
$ say "SHELVABLE = ''f$file_attribute( P1,""SHELVABLE"" )'.     TRUE if the file is shelvable; otherwise FALSE."
$ say "SHELVED = ''f$file_attribute( P1,""SHELVED"" )'.     TRUE if the file is shelved; otherwise FALSE."
$ say "STORED_SEMANTICS = ''f$file_attribute( P1,""STORED_SEMANTICS"" )'.     ASCII string that represents stored semantics."
$ say "UIC = ''f$file_attribute( P1,""UIC"" )'.     Owner user identification code (UIC) string."
$ say "VERLIMIT = ''f$file_attribute( P1,""VERLIMIT"" )'.     Version limit number. The value 32767 indicates that no version limit was set."
$ say "WCK = ''f$file_attribute( P1,""WCK"" )'.     TRUE if write check; otherwise FALSE."
